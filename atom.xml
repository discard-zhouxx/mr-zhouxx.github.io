<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BloooG</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blooog.top/"/>
  <updated>2020-07-21T15:15:51.195Z</updated>
  <id>https://blooog.top/</id>
  
  <author>
    <name>周某某</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>让人头疼的多线程：synchronized暴打线程安全</title>
    <link href="https://blooog.top/%E8%AE%A9%E4%BA%BA%E5%A4%B4%E7%96%BC%E7%9A%84%E5%A4%9A%E7%BA%BF%E7%A8%8B%EF%BC%9Asynchronized%E6%9A%B4%E6%89%93%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8/"/>
    <id>https://blooog.top/%E8%AE%A9%E4%BA%BA%E5%A4%B4%E7%96%BC%E7%9A%84%E5%A4%9A%E7%BA%BF%E7%A8%8B%EF%BC%9Asynchronized%E6%9A%B4%E6%89%93%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8/</id>
    <published>2020-07-17T03:25:52.000Z</published>
    <updated>2020-07-21T15:15:51.195Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;INTRO：&lt;/strong&gt;线程安全是什么？我就头铁不加锁。性能是什么？我每个方法都来一个synchronized。这篇博客synchronized原理入手，教你怎样合理利用synchronized写出性能和安全兼顾的代码。&lt;/p&gt;
    
    </summary>
    
    
      <category term="多线程" scheme="https://blooog.top/categories/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
    
      <category term="多线程" scheme="https://blooog.top/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
      <category term="线程安全" scheme="https://blooog.top/tags/%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8/"/>
    
      <category term="synchronized" scheme="https://blooog.top/tags/synchronized/"/>
    
  </entry>
  
  <entry>
    <title>让人头疼的多线程：CRUD用得到多线程？</title>
    <link href="https://blooog.top/%E8%AE%A9%E4%BA%BA%E5%A4%B4%E7%96%BC%E7%9A%84%E5%A4%9A%E7%BA%BF%E7%A8%8B%EF%BC%9ACRUD%E7%94%A8%E5%BE%97%E5%88%B0%E5%A4%9A%E7%BA%BF%E7%A8%8B%EF%BC%9F/"/>
    <id>https://blooog.top/%E8%AE%A9%E4%BA%BA%E5%A4%B4%E7%96%BC%E7%9A%84%E5%A4%9A%E7%BA%BF%E7%A8%8B%EF%BC%9ACRUD%E7%94%A8%E5%BE%97%E5%88%B0%E5%A4%9A%E7%BA%BF%E7%A8%8B%EF%BC%9F/</id>
    <published>2020-07-16T14:35:28.000Z</published>
    <updated>2020-07-19T03:13:31.136Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;INTRO：&lt;/strong&gt;多线程这个东西让人又爱又恨，爱的是它解决了CPU偷懒的问题，恨的是它复杂、知识多、日常难接触到。这三点交杂起来，真的是让人觉得脑壳疼，这篇博客就解决你的心头病，带你从头撸下多线程。&lt;/p&gt;
    
    </summary>
    
    
      <category term="多线程" scheme="https://blooog.top/categories/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
    
      <category term="多线程" scheme="https://blooog.top/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
      <category term="并发" scheme="https://blooog.top/tags/%E5%B9%B6%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>让人头疼的多线程：Volatile和线程可见性</title>
    <link href="https://blooog.top/%E8%AE%A9%E4%BA%BA%E5%A4%B4%E7%96%BC%E7%9A%84%E5%A4%9A%E7%BA%BF%E7%A8%8B%EF%BC%9AVolatile%E5%92%8C%E7%BA%BF%E7%A8%8B%E5%8F%AF%E8%A7%81%E6%80%A7/"/>
    <id>https://blooog.top/%E8%AE%A9%E4%BA%BA%E5%A4%B4%E7%96%BC%E7%9A%84%E5%A4%9A%E7%BA%BF%E7%A8%8B%EF%BC%9AVolatile%E5%92%8C%E7%BA%BF%E7%A8%8B%E5%8F%AF%E8%A7%81%E6%80%A7/</id>
    <published>2020-07-15T02:06:20.000Z</published>
    <updated>2020-07-16T10:42:42.228Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;INTRO：&lt;/strong&gt; 多线程编程一直是一个比较难的技术，知识点多而且复杂，脑子不好使的我曾经在这方面跌倒无数次，多线程中的每一个关键字都有可能牵扯出一大堆的技术问题，这篇博客就来深挖一下Volatile关键字。&lt;/p&gt;
    
    </summary>
    
    
      <category term="多线程" scheme="https://blooog.top/categories/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
    
      <category term="多线程" scheme="https://blooog.top/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
      <category term="Volatile" scheme="https://blooog.top/tags/Volatile/"/>
    
      <category term="线程安全" scheme="https://blooog.top/tags/%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>快乐的SpringMVC（一）：前后端分离下的SpringMVC</title>
    <link href="https://blooog.top/%E5%BF%AB%E4%B9%90%E7%9A%84SpringMVC%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E4%B8%8B%E7%9A%84SpringMVC/"/>
    <id>https://blooog.top/%E5%BF%AB%E4%B9%90%E7%9A%84SpringMVC%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E4%B8%8B%E7%9A%84SpringMVC/</id>
    <published>2020-07-10T11:51:48.000Z</published>
    <updated>2020-07-12T06:52:57.249Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;INTRO：&lt;/strong&gt; SpringMVC主要负责MVC模式的实现。SpringMVC近几年来已经逐渐取代Struts2的地位，当然现在是SpringBoot大行其道，那么为什么还要学习SpringMVC呢？因为SpringBoot是Spring的封装，而SpringMVC又是Spring的组件，所以不学习SpringMVC就无法掌握SpringBoot的web部分。&lt;/p&gt;
    
    </summary>
    
    
      <category term="SpringMVC" scheme="https://blooog.top/categories/SpringMVC/"/>
    
    
      <category term="SpringMVC" scheme="https://blooog.top/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>Redis学习笔记（一）：Redis基础入门</title>
    <link href="https://blooog.top/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9ARedis%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/"/>
    <id>https://blooog.top/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9ARedis%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/</id>
    <published>2020-07-09T01:17:59.000Z</published>
    <updated>2020-07-10T07:51:44.249Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;INTRO：&lt;/strong&gt; 在实际开发过程中，我们会经常用到Redis，作为一个高速缓存数据库，我们该从哪里开始学习呢？本文参考Redis文档作为大纲编写，从这篇博客开始开辟Redis这个高速公路。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Redis" scheme="https://blooog.top/categories/Redis/"/>
    
    
      <category term="Redis" scheme="https://blooog.top/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot学习笔记（二）：自动配置原理</title>
    <link href="https://blooog.top/SpringBoot%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%8E%9F%E7%90%86/"/>
    <id>https://blooog.top/SpringBoot%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%8E%9F%E7%90%86/</id>
    <published>2020-07-07T06:31:46.000Z</published>
    <updated>2020-07-07T07:42:43.684Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;INTRO:&lt;/strong&gt;  上一篇博客讲解了SpringBoot的入门知识，了解到SpringBoot的精髓就是自动配置，自动配置的简便让SpringBoot在JavaEE领域大杀四方，学习SpringBoot自动配置的原理让我们知其所以然，博主写这篇博客就是为了让大家了解SpringBoot自动配置的原理。&lt;/p&gt;
    
    </summary>
    
    
      <category term="SpringBoot" scheme="https://blooog.top/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="https://blooog.top/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot学习笔记（一）：SpringBoot入门</title>
    <link href="https://blooog.top/SpringBoot%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9ASpringBoot%E5%85%A5%E9%97%A8/"/>
    <id>https://blooog.top/SpringBoot%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9ASpringBoot%E5%85%A5%E9%97%A8/</id>
    <published>2020-07-06T16:22:32.000Z</published>
    <updated>2020-07-09T11:12:31.115Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;INTRO：&lt;/strong&gt; SpringBoot究竟是何方神圣？Spring开发人员使用SpringBoot之后为何热泪盈眶？JavaEE生态圈为何对SpringBoot狂舔不止？这一切的原因究竟是Spring不够骚了，还是你SpringBoot有点飘了？接下来，欢迎收看我的SpringBoot学习笔记之SpringBoot入门，让我们一起走进SpringBoot的内心世界。&lt;/p&gt;
    
    </summary>
    
    
      <category term="SpringBoot" scheme="https://blooog.top/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="https://blooog.top/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>白话Spring（一）：SpringIOC到底是个啥？</title>
    <link href="https://blooog.top/%E7%99%BD%E8%AF%9DSpring%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9ASpringIOC%E5%88%B0%E5%BA%95%E6%98%AF%E4%B8%AA%E5%95%A5%EF%BC%9F/"/>
    <id>https://blooog.top/%E7%99%BD%E8%AF%9DSpring%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9ASpringIOC%E5%88%B0%E5%BA%95%E6%98%AF%E4%B8%AA%E5%95%A5%EF%BC%9F/</id>
    <published>2020-07-06T14:54:46.000Z</published>
    <updated>2020-07-09T11:11:24.847Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;INTRO:&lt;/strong&gt; 学习过Spring框架的人一定都听过Spring的IoC(控制反转) 、DI(依赖注入)这两个概念，对于初学Spring的人来说，这两个概念还是比较难懂的，所以博主就用大白话的给初学者讲一下这两个概念。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Spring" scheme="https://blooog.top/categories/Spring/"/>
    
    
      <category term="Spring" scheme="https://blooog.top/tags/Spring/"/>
    
      <category term="IOC" scheme="https://blooog.top/tags/IOC/"/>
    
  </entry>
  
</feed>
